// Generated by view binder compiler. Do not edit!
package com.example.aniglory_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aniglory_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTitleBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView addBookmarks;

  @NonNull
  public final Button bWatch;

  @NonNull
  public final ImageView backgroundPoster;

  @NonNull
  public final ImageView blur;

  @NonNull
  public final ImageView close;

  @NonNull
  public final ImageView closeFull;

  @NonNull
  public final Button comments;

  @NonNull
  public final ConstraintLayout descriptLayout;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView descriptionFull;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final ImageView poster;

  @NonNull
  public final ConstraintLayout posters;

  @NonNull
  public final TextView readFull;

  @NonNull
  public final TextView season;

  @NonNull
  public final ImageView share;

  @NonNull
  public final FrameLayout sheet;

  @NonNull
  public final ImageView stars;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView title;

  private FragmentTitleBinding(@NonNull FrameLayout rootView, @NonNull ImageView addBookmarks,
      @NonNull Button bWatch, @NonNull ImageView backgroundPoster, @NonNull ImageView blur,
      @NonNull ImageView close, @NonNull ImageView closeFull, @NonNull Button comments,
      @NonNull ConstraintLayout descriptLayout, @NonNull TextView description,
      @NonNull TextView descriptionFull, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayout2, @NonNull ImageView poster,
      @NonNull ConstraintLayout posters, @NonNull TextView readFull, @NonNull TextView season,
      @NonNull ImageView share, @NonNull FrameLayout sheet, @NonNull ImageView stars,
      @NonNull TextView textView14, @NonNull TextView textView5, @NonNull TextView title) {
    this.rootView = rootView;
    this.addBookmarks = addBookmarks;
    this.bWatch = bWatch;
    this.backgroundPoster = backgroundPoster;
    this.blur = blur;
    this.close = close;
    this.closeFull = closeFull;
    this.comments = comments;
    this.descriptLayout = descriptLayout;
    this.description = description;
    this.descriptionFull = descriptionFull;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.poster = poster;
    this.posters = posters;
    this.readFull = readFull;
    this.season = season;
    this.share = share;
    this.sheet = sheet;
    this.stars = stars;
    this.textView14 = textView14;
    this.textView5 = textView5;
    this.title = title;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTitleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTitleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_title, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTitleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addBookmarks;
      ImageView addBookmarks = ViewBindings.findChildViewById(rootView, id);
      if (addBookmarks == null) {
        break missingId;
      }

      id = R.id.bWatch;
      Button bWatch = ViewBindings.findChildViewById(rootView, id);
      if (bWatch == null) {
        break missingId;
      }

      id = R.id.backgroundPoster;
      ImageView backgroundPoster = ViewBindings.findChildViewById(rootView, id);
      if (backgroundPoster == null) {
        break missingId;
      }

      id = R.id.blur;
      ImageView blur = ViewBindings.findChildViewById(rootView, id);
      if (blur == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.closeFull;
      ImageView closeFull = ViewBindings.findChildViewById(rootView, id);
      if (closeFull == null) {
        break missingId;
      }

      id = R.id.comments;
      Button comments = ViewBindings.findChildViewById(rootView, id);
      if (comments == null) {
        break missingId;
      }

      id = R.id.descriptLayout;
      ConstraintLayout descriptLayout = ViewBindings.findChildViewById(rootView, id);
      if (descriptLayout == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.descriptionFull;
      TextView descriptionFull = ViewBindings.findChildViewById(rootView, id);
      if (descriptionFull == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.poster;
      ImageView poster = ViewBindings.findChildViewById(rootView, id);
      if (poster == null) {
        break missingId;
      }

      id = R.id.posters;
      ConstraintLayout posters = ViewBindings.findChildViewById(rootView, id);
      if (posters == null) {
        break missingId;
      }

      id = R.id.readFull;
      TextView readFull = ViewBindings.findChildViewById(rootView, id);
      if (readFull == null) {
        break missingId;
      }

      id = R.id.season;
      TextView season = ViewBindings.findChildViewById(rootView, id);
      if (season == null) {
        break missingId;
      }

      id = R.id.share;
      ImageView share = ViewBindings.findChildViewById(rootView, id);
      if (share == null) {
        break missingId;
      }

      id = R.id.sheet;
      FrameLayout sheet = ViewBindings.findChildViewById(rootView, id);
      if (sheet == null) {
        break missingId;
      }

      id = R.id.stars;
      ImageView stars = ViewBindings.findChildViewById(rootView, id);
      if (stars == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new FragmentTitleBinding((FrameLayout) rootView, addBookmarks, bWatch,
          backgroundPoster, blur, close, closeFull, comments, descriptLayout, description,
          descriptionFull, linearLayout, linearLayout2, poster, posters, readFull, season, share,
          sheet, stars, textView14, textView5, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
