// Generated by view binder compiler. Do not edit!
package com.example.aniglory_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aniglory_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNewTitleBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView actors;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final ImageButton bookmarks;

  @NonNull
  public final TextView cntEpisodes;

  @NonNull
  public final TextView compositors;

  @NonNull
  public final ImageButton deleteFromBookmarks;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView directors;

  @NonNull
  public final TextView episode;

  @NonNull
  public final LinearLayout genres;

  @NonNull
  public final LinearLayout info;

  @NonNull
  public final TextView mainGenre;

  @NonNull
  public final ImageView posterImg;

  @NonNull
  public final TextView producers;

  @NonNull
  public final TextView savedBookmarks;

  @NonNull
  public final ImageView screen1;

  @NonNull
  public final ImageView screen2;

  @NonNull
  public final ImageView screen3;

  @NonNull
  public final ImageView screen4;

  @NonNull
  public final ImageView screen5;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView studio;

  @NonNull
  public final TextView titleOtherTXt;

  @NonNull
  public final TextView titleTXt;

  @NonNull
  public final TextView type;

  @NonNull
  public final Button watch;

  @NonNull
  public final TextView writs;

  @NonNull
  public final TextView year;

  private FragmentNewTitleBinding(@NonNull FrameLayout rootView, @NonNull TextView actors,
      @NonNull ImageButton backBtn, @NonNull ImageButton bookmarks, @NonNull TextView cntEpisodes,
      @NonNull TextView compositors, @NonNull ImageButton deleteFromBookmarks,
      @NonNull TextView description, @NonNull TextView directors, @NonNull TextView episode,
      @NonNull LinearLayout genres, @NonNull LinearLayout info, @NonNull TextView mainGenre,
      @NonNull ImageView posterImg, @NonNull TextView producers, @NonNull TextView savedBookmarks,
      @NonNull ImageView screen1, @NonNull ImageView screen2, @NonNull ImageView screen3,
      @NonNull ImageView screen4, @NonNull ImageView screen5, @NonNull TextView status,
      @NonNull TextView studio, @NonNull TextView titleOtherTXt, @NonNull TextView titleTXt,
      @NonNull TextView type, @NonNull Button watch, @NonNull TextView writs,
      @NonNull TextView year) {
    this.rootView = rootView;
    this.actors = actors;
    this.backBtn = backBtn;
    this.bookmarks = bookmarks;
    this.cntEpisodes = cntEpisodes;
    this.compositors = compositors;
    this.deleteFromBookmarks = deleteFromBookmarks;
    this.description = description;
    this.directors = directors;
    this.episode = episode;
    this.genres = genres;
    this.info = info;
    this.mainGenre = mainGenre;
    this.posterImg = posterImg;
    this.producers = producers;
    this.savedBookmarks = savedBookmarks;
    this.screen1 = screen1;
    this.screen2 = screen2;
    this.screen3 = screen3;
    this.screen4 = screen4;
    this.screen5 = screen5;
    this.status = status;
    this.studio = studio;
    this.titleOtherTXt = titleOtherTXt;
    this.titleTXt = titleTXt;
    this.type = type;
    this.watch = watch;
    this.writs = writs;
    this.year = year;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNewTitleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNewTitleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_new_title, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNewTitleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actors;
      TextView actors = ViewBindings.findChildViewById(rootView, id);
      if (actors == null) {
        break missingId;
      }

      id = R.id.backBtn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.bookmarks;
      ImageButton bookmarks = ViewBindings.findChildViewById(rootView, id);
      if (bookmarks == null) {
        break missingId;
      }

      id = R.id.cntEpisodes;
      TextView cntEpisodes = ViewBindings.findChildViewById(rootView, id);
      if (cntEpisodes == null) {
        break missingId;
      }

      id = R.id.compositors;
      TextView compositors = ViewBindings.findChildViewById(rootView, id);
      if (compositors == null) {
        break missingId;
      }

      id = R.id.deleteFromBookmarks;
      ImageButton deleteFromBookmarks = ViewBindings.findChildViewById(rootView, id);
      if (deleteFromBookmarks == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.directors;
      TextView directors = ViewBindings.findChildViewById(rootView, id);
      if (directors == null) {
        break missingId;
      }

      id = R.id.episode;
      TextView episode = ViewBindings.findChildViewById(rootView, id);
      if (episode == null) {
        break missingId;
      }

      id = R.id.genres;
      LinearLayout genres = ViewBindings.findChildViewById(rootView, id);
      if (genres == null) {
        break missingId;
      }

      id = R.id.info;
      LinearLayout info = ViewBindings.findChildViewById(rootView, id);
      if (info == null) {
        break missingId;
      }

      id = R.id.mainGenre;
      TextView mainGenre = ViewBindings.findChildViewById(rootView, id);
      if (mainGenre == null) {
        break missingId;
      }

      id = R.id.posterImg;
      ImageView posterImg = ViewBindings.findChildViewById(rootView, id);
      if (posterImg == null) {
        break missingId;
      }

      id = R.id.producers;
      TextView producers = ViewBindings.findChildViewById(rootView, id);
      if (producers == null) {
        break missingId;
      }

      id = R.id.savedBookmarks;
      TextView savedBookmarks = ViewBindings.findChildViewById(rootView, id);
      if (savedBookmarks == null) {
        break missingId;
      }

      id = R.id.screen1;
      ImageView screen1 = ViewBindings.findChildViewById(rootView, id);
      if (screen1 == null) {
        break missingId;
      }

      id = R.id.screen2;
      ImageView screen2 = ViewBindings.findChildViewById(rootView, id);
      if (screen2 == null) {
        break missingId;
      }

      id = R.id.screen3;
      ImageView screen3 = ViewBindings.findChildViewById(rootView, id);
      if (screen3 == null) {
        break missingId;
      }

      id = R.id.screen4;
      ImageView screen4 = ViewBindings.findChildViewById(rootView, id);
      if (screen4 == null) {
        break missingId;
      }

      id = R.id.screen5;
      ImageView screen5 = ViewBindings.findChildViewById(rootView, id);
      if (screen5 == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.studio;
      TextView studio = ViewBindings.findChildViewById(rootView, id);
      if (studio == null) {
        break missingId;
      }

      id = R.id.titleOtherTXt;
      TextView titleOtherTXt = ViewBindings.findChildViewById(rootView, id);
      if (titleOtherTXt == null) {
        break missingId;
      }

      id = R.id.titleTXt;
      TextView titleTXt = ViewBindings.findChildViewById(rootView, id);
      if (titleTXt == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      id = R.id.watch;
      Button watch = ViewBindings.findChildViewById(rootView, id);
      if (watch == null) {
        break missingId;
      }

      id = R.id.writs;
      TextView writs = ViewBindings.findChildViewById(rootView, id);
      if (writs == null) {
        break missingId;
      }

      id = R.id.year;
      TextView year = ViewBindings.findChildViewById(rootView, id);
      if (year == null) {
        break missingId;
      }

      return new FragmentNewTitleBinding((FrameLayout) rootView, actors, backBtn, bookmarks,
          cntEpisodes, compositors, deleteFromBookmarks, description, directors, episode, genres,
          info, mainGenre, posterImg, producers, savedBookmarks, screen1, screen2, screen3, screen4,
          screen5, status, studio, titleOtherTXt, titleTXt, type, watch, writs, year);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
