// Generated by view binder compiler. Do not edit!
package com.example.aniglory_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aniglory_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookmarksBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView bAbandoned;

  @NonNull
  public final ConstraintLayout bBookmark;

  @NonNull
  public final CardView bPlans;

  @NonNull
  public final CardView bPostponed;

  @NonNull
  public final ConstraintLayout bProfile;

  @NonNull
  public final ConstraintLayout bSearch;

  @NonNull
  public final ConstraintLayout bSettings;

  @NonNull
  public final CardView bWatched;

  @NonNull
  public final CardView bWatching;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final ImageView iBookmark;

  @NonNull
  public final ImageView iProfile;

  @NonNull
  public final ImageView iSearch;

  @NonNull
  public final ImageView iSettings;

  @NonNull
  public final RecyclerView rcView;

  @NonNull
  public final TextView tAbandoned;

  @NonNull
  public final TextView tBookmark;

  @NonNull
  public final TextView tPlans;

  @NonNull
  public final TextView tPostponed;

  @NonNull
  public final TextView tProfile;

  @NonNull
  public final TextView tSearch;

  @NonNull
  public final TextView tSettings;

  @NonNull
  public final TextView tWatched;

  @NonNull
  public final TextView tWatching;

  private ActivityBookmarksBinding(@NonNull ConstraintLayout rootView, @NonNull CardView bAbandoned,
      @NonNull ConstraintLayout bBookmark, @NonNull CardView bPlans, @NonNull CardView bPostponed,
      @NonNull ConstraintLayout bProfile, @NonNull ConstraintLayout bSearch,
      @NonNull ConstraintLayout bSettings, @NonNull CardView bWatched, @NonNull CardView bWatching,
      @NonNull CardView cardView, @NonNull HorizontalScrollView horizontalScrollView,
      @NonNull ImageView iBookmark, @NonNull ImageView iProfile, @NonNull ImageView iSearch,
      @NonNull ImageView iSettings, @NonNull RecyclerView rcView, @NonNull TextView tAbandoned,
      @NonNull TextView tBookmark, @NonNull TextView tPlans, @NonNull TextView tPostponed,
      @NonNull TextView tProfile, @NonNull TextView tSearch, @NonNull TextView tSettings,
      @NonNull TextView tWatched, @NonNull TextView tWatching) {
    this.rootView = rootView;
    this.bAbandoned = bAbandoned;
    this.bBookmark = bBookmark;
    this.bPlans = bPlans;
    this.bPostponed = bPostponed;
    this.bProfile = bProfile;
    this.bSearch = bSearch;
    this.bSettings = bSettings;
    this.bWatched = bWatched;
    this.bWatching = bWatching;
    this.cardView = cardView;
    this.horizontalScrollView = horizontalScrollView;
    this.iBookmark = iBookmark;
    this.iProfile = iProfile;
    this.iSearch = iSearch;
    this.iSettings = iSettings;
    this.rcView = rcView;
    this.tAbandoned = tAbandoned;
    this.tBookmark = tBookmark;
    this.tPlans = tPlans;
    this.tPostponed = tPostponed;
    this.tProfile = tProfile;
    this.tSearch = tSearch;
    this.tSettings = tSettings;
    this.tWatched = tWatched;
    this.tWatching = tWatching;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookmarksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookmarksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bookmarks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookmarksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bAbandoned;
      CardView bAbandoned = ViewBindings.findChildViewById(rootView, id);
      if (bAbandoned == null) {
        break missingId;
      }

      id = R.id.bBookmark;
      ConstraintLayout bBookmark = ViewBindings.findChildViewById(rootView, id);
      if (bBookmark == null) {
        break missingId;
      }

      id = R.id.bPlans;
      CardView bPlans = ViewBindings.findChildViewById(rootView, id);
      if (bPlans == null) {
        break missingId;
      }

      id = R.id.bPostponed;
      CardView bPostponed = ViewBindings.findChildViewById(rootView, id);
      if (bPostponed == null) {
        break missingId;
      }

      id = R.id.bProfile;
      ConstraintLayout bProfile = ViewBindings.findChildViewById(rootView, id);
      if (bProfile == null) {
        break missingId;
      }

      id = R.id.bSearch;
      ConstraintLayout bSearch = ViewBindings.findChildViewById(rootView, id);
      if (bSearch == null) {
        break missingId;
      }

      id = R.id.bSettings;
      ConstraintLayout bSettings = ViewBindings.findChildViewById(rootView, id);
      if (bSettings == null) {
        break missingId;
      }

      id = R.id.bWatched;
      CardView bWatched = ViewBindings.findChildViewById(rootView, id);
      if (bWatched == null) {
        break missingId;
      }

      id = R.id.bWatching;
      CardView bWatching = ViewBindings.findChildViewById(rootView, id);
      if (bWatching == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.iBookmark;
      ImageView iBookmark = ViewBindings.findChildViewById(rootView, id);
      if (iBookmark == null) {
        break missingId;
      }

      id = R.id.iProfile;
      ImageView iProfile = ViewBindings.findChildViewById(rootView, id);
      if (iProfile == null) {
        break missingId;
      }

      id = R.id.iSearch;
      ImageView iSearch = ViewBindings.findChildViewById(rootView, id);
      if (iSearch == null) {
        break missingId;
      }

      id = R.id.iSettings;
      ImageView iSettings = ViewBindings.findChildViewById(rootView, id);
      if (iSettings == null) {
        break missingId;
      }

      id = R.id.rcView;
      RecyclerView rcView = ViewBindings.findChildViewById(rootView, id);
      if (rcView == null) {
        break missingId;
      }

      id = R.id.tAbandoned;
      TextView tAbandoned = ViewBindings.findChildViewById(rootView, id);
      if (tAbandoned == null) {
        break missingId;
      }

      id = R.id.tBookmark;
      TextView tBookmark = ViewBindings.findChildViewById(rootView, id);
      if (tBookmark == null) {
        break missingId;
      }

      id = R.id.tPlans;
      TextView tPlans = ViewBindings.findChildViewById(rootView, id);
      if (tPlans == null) {
        break missingId;
      }

      id = R.id.tPostponed;
      TextView tPostponed = ViewBindings.findChildViewById(rootView, id);
      if (tPostponed == null) {
        break missingId;
      }

      id = R.id.tProfile;
      TextView tProfile = ViewBindings.findChildViewById(rootView, id);
      if (tProfile == null) {
        break missingId;
      }

      id = R.id.tSearch;
      TextView tSearch = ViewBindings.findChildViewById(rootView, id);
      if (tSearch == null) {
        break missingId;
      }

      id = R.id.tSettings;
      TextView tSettings = ViewBindings.findChildViewById(rootView, id);
      if (tSettings == null) {
        break missingId;
      }

      id = R.id.tWatched;
      TextView tWatched = ViewBindings.findChildViewById(rootView, id);
      if (tWatched == null) {
        break missingId;
      }

      id = R.id.tWatching;
      TextView tWatching = ViewBindings.findChildViewById(rootView, id);
      if (tWatching == null) {
        break missingId;
      }

      return new ActivityBookmarksBinding((ConstraintLayout) rootView, bAbandoned, bBookmark,
          bPlans, bPostponed, bProfile, bSearch, bSettings, bWatched, bWatching, cardView,
          horizontalScrollView, iBookmark, iProfile, iSearch, iSettings, rcView, tAbandoned,
          tBookmark, tPlans, tPostponed, tProfile, tSearch, tSettings, tWatched, tWatching);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
